//lista simple en c
#include <stdio.h>
#include <stdlib.h>

struct Nodo {
    int dato;
    struct Nodo* siguiente;
};

struct Nodo* crearNodo(int dato) {
    struct Nodo* nuevoNodo = (struct Nodo*)malloc(sizeof(struct Nodo));
    nuevoNodo->dato = dato;
    nuevoNodo->siguiente = NULL;
    return nuevoNodo;
}

void agregarAlFinal(struct Nodo** cabeza, int dato) {
    struct Nodo* nuevo = crearNodo(dato);
    if (*cabeza == NULL) {
        *cabeza = nuevo;
    } else {
        struct Nodo* temp = *cabeza;
        while (temp->siguiente != NULL) {
            temp = temp->siguiente;
        }
        temp->siguiente = nuevo;
    }
}

void eliminarNodo(struct Nodo** cabeza, int dato) {
    struct Nodo* actual = *cabeza;
    struct Nodo* anterior = NULL;
    
    while (actual != NULL && actual->dato != dato) {
        anterior = actual;
        actual = actual->siguiente;
    }
    
    if (actual == NULL) {
        printf("El elemento no se encontró en la lista.\n");
        return;
    }
    
    if (anterior == NULL) {
        *cabeza = actual->siguiente;
    } else {
        anterior->siguiente = actual->siguiente;
    }
    
    free(actual);
}


void mostrarLista(struct Nodo* cabeza) {
    struct Nodo* temp = cabeza;
    while (temp != NULL) {
        printf("%d -> ", temp->dato);
        temp = temp->siguiente;
    }
    printf("NULL\n");
}

int main() {
    struct Nodo* cabeza = NULL;
    
    agregarAlFinal(&cabeza, 10);
    agregarAlFinal(&cabeza, 20);
    agregarAlFinal(&cabeza, 30);
    
    printf("Lista enlazada original:\n");
    mostrarLista(cabeza);
    
    eliminarNodo(&cabeza, 20);
    
    printf("Lista enlazada después de eliminar 20:\n");
    mostrarLista(cabeza);
    
    return 0;
}
